from PIL import Image

def create_cpp_code(juice):
    code = '#pragma once\n'
    code += '#include <avr/pgmspace.h>\n\n'
    code += juice
    return code

def create_cpp_array(data, name):
  code = f'uint8_t {name}[{len(data)}] PROGMEM = {{'
  for element in data:
    code += hex(element)
    code += ', '
  code += '};\n'
  return code

def rle(data):
  out = [1, data[0]]
  for element in data[1:]:
    if element == out[-1]:
      out[-2] += 1
    else:
      out.append(1)
      out.append(element)
  return out

def load_image(image):
  img = Image.open(image['filename'])
  pixel_stream = []
  for y in range(0, img.height, 8):
    for x in range(0, img.width):
      pixel = 0
      for bit in range(0, 8):
        pixel <<= 1
        pixel_from_image = img.getpixel((x, y+bit))
        if pixel_from_image == (0xFF, 0xFF, 0xFF):
          pixel |= 1
        else:
          pixel |= 0
      pixel_stream.append(pixel)
  return pixel_stream

sources = [
  {'filename': r'big_font/0.png', 'c_obj_name': 'b_0'},
  {'filename': r'big_font/1.png', 'c_obj_name': 'b_1'},
  {'filename': r'big_font/2.png', 'c_obj_name': 'b_2'},
  {'filename': r'big_font/3.png', 'c_obj_name': 'b_3'},
  {'filename': r'big_font/4.png', 'c_obj_name': 'b_4'},
  {'filename': r'big_font/5.png', 'c_obj_name': 'b_5'},
  {'filename': r'big_font/6.png', 'c_obj_name': 'b_6'},
  {'filename': r'big_font/7.png', 'c_obj_name': 'b_7'},
  {'filename': r'big_font/8.png', 'c_obj_name': 'b_8'},
  {'filename': r'big_font/9.png', 'c_obj_name': 'b_9'},
  {'filename': r'big_font/colon.png', 'c_obj_name': 'b_colon'},
  {'filename': r'small_font/0.png', 'c_obj_name': 's_0'},
  {'filename': r'small_font/1.png', 'c_obj_name': 's_1'},
  {'filename': r'small_font/2.png', 'c_obj_name': 's_2'},
  {'filename': r'small_font/3.png', 'c_obj_name': 's_3'},
  {'filename': r'small_font/4.png', 'c_obj_name': 's_4'},
  {'filename': r'small_font/5.png', 'c_obj_name': 's_5'},
  {'filename': r'small_font/6.png', 'c_obj_name': 's_6'},
  {'filename': r'small_font/7.png', 'c_obj_name': 's_7'},
  {'filename': r'small_font/8.png', 'c_obj_name': 's_8'},
  {'filename': r'small_font/9.png', 'c_obj_name': 's_9'},
  {'filename': r'small_font/colon.png', 'c_obj_name': 's_colon'},
  {'filename': r'small_font/slash.png', 'c_obj_name': 's_slash'},
  {'filename': r'bitmaps/baloons.png', 'c_obj_name': 'baloons'},
  {'filename': r'bitmaps/hearts.png', 'c_obj_name': 'hearts'},
  {'filename': r'bitmaps/kuce.png', 'c_obj_name': 'kuce'},
  {'filename': r'bitmaps/ring.png', 'c_obj_name': 'ring'},
]
juce = ''
for source in sources:
  pixel_stream = load_image(source)
  juce += create_cpp_array(rle(pixel_stream), source['c_obj_name'])
with open(r'autogenerated/bitmaps.h', 'wt') as output:
  print(create_cpp_code(juce))
  # output.write(create_cpp_code(juce))
